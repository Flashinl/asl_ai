version: '3.8'

services:
  asl-ai-app:
    build: .
    container_name: asl-to-text-ai
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DEBUG=false
      - SECRET_KEY=${SECRET_KEY:-asl-ai-secret-key-change-in-production}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///app/data/asl_ai.db}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - asl-ai-network

  # Optional: Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: asl-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - asl-ai-network
    command: redis-server --appendonly yes

  # Optional: PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: asl-ai-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-asl_ai}
      - POSTGRES_USER=${POSTGRES_USER:-asl_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-asl_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - asl-ai-network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: asl-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - asl-ai-app
    restart: unless-stopped
    networks:
      - asl-ai-network

volumes:
  redis_data:
  postgres_data:

networks:
  asl-ai-network:
    driver: bridge
